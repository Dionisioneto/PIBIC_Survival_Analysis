max.mep$value
AIC.surv(loglik = max.mep$value*-1,
n.param = length(max.mep$par),
n.sample = dim(hiv2)[1])
BIC.surv(loglik = max.mep$value*-1,
n.param = length(max.mep$par),
n.sample = dim(hiv2)[1])
HC.surv(loglik = max.mep$value*-1,
n.param = length(max.mep$par),
n.sample = dim(hiv2)[1])
left = (hiv2$Li)/7
right = (hiv2$Ri)/7
cov = hiv2$DoseType
n.int = 2
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par))
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
estimacao$par
estimacao$par
n.int = 3
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,5,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
chutes = c(1,0.2,1,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
chutes = c(1,0.2,3,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
chutes = c(1,0.2,5,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
n.int = 4
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,5,5,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
left = (hiv2$Li)/7
right = (hiv2$Ri)/7
cov = hiv2$DoseType
n.int = 5
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,5,1,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
n.int = 5
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,2,2,
10,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
n.int = 5
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,2,2,
20,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
n.int = 5
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,5,5,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
n.int = 6
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,5,5,8,
5,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
n.int = 6
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,1,5,5,1,8,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
n.int = 6
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,1,5,5,10,8,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
n.int = 6
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,10,1,1,10,
9
1, 0.5,
n.int = 6
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,10,1,1,10,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
n.int = 7
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes =  c(1,0.2,1,10,1,1,10,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
left = (hiv2$Li)/7
right = (hiv2$Ri)/7
cov = hiv2$DoseType
n.int = 8
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,0.2,1,10,1,1,1,10,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
chutes = c(1,0.2,1,10,1,1,1,5,
9,
1, 0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
AIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
BIC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
HC.surv(loglik = estimacao$value*-1, n.param = length(estimacao$par),
n.sample = nrow(hiv2))
turnbull_fit = ic_np(cbind(L, R)~0, data = hemo.icens, B = c(1,1))
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100), axes = F,
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(1,58,4), labels=seq(1,58,4), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
turnbull_fit$T_bull_Intervals
turnbull_fit$var
turnbull_fit$copy
turnbull_fit$terms
turnbull_fit$T_bull_Intervals
turnbull_fit$p_hat
length(turnbull_fit$p_hat)
length(turnbull_fit$T_bull_Intervals[1,])
length(turnbull_fit$T_bull_Intervals[2,])
plot(turnbull_fit$T_bull_Intervals[1,],)
plot(turnbull_fit$T_bull_Intervals[1,],turnbull_fit$p_hat)
plot(turnbull_fit$T_bull_Intervals[1,],turnbull_fit$p_hat, type = 's')
plot(sort(turnbull_fit$T_bull_Intervals[1,],descreasing=T),turnbull_fit$p_hat, type = 's')
plot(sort(turnbull_fit$T_bull_Intervals[1,],descreasing=T),turnbull_fit$p_hat, type = 's')
sort()
plot(sort(turnbull_fit$T_bull_Intervals[1,],decreasing=T),turnbull_fit$p_hat, type = 's')
plot(sort(turnbull_fit$T_bull_Intervals[1,],decreasing=T),sort(turnbull_fit$p_hat,decreasing=T), type = 's')
plot(sort(turnbull_fit$T_bull_Intervals[1,],decreasing=F),sort(turnbull_fit$p_hat,decreasing=F), type = 's')
plot(sort(turnbull_fit$T_bull_Intervals[1,],decreasing=T),sort(turnbull_fit$p_hat,decreasing=F), type = 's')
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100), axes = F,
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100), axes = F,
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
plot(sort(turnbull_fit$T_bull_Intervals[1,],decreasing=T),sort(turnbull_fit$p_hat,decreasing=F), type = 's')
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100),
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
turnbull_fit = ic_np(cbind(L, R)~0, data = hemo.icens, B = c(1,1))
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100),
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(1,58,4), labels=seq(1,58,4), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
## Ajuste do modelo Weibull aos dados
## ---
weibull = ic_par(formula = cbind(L, R) ~ NoDose, data = hemo.icens,
model = "ph", dist = "weibull")
weibull$coefficients
turnbull_fit = ic_np(cbind(L, R)~0, data = hemo.icens, B = c(1,1))
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100),axes=F,
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(1,58,4), labels=seq(1,58,4), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
## Ajuste do modelo Weibull aos dados
## ---
weibull = ic_par(formula = cbind(L, R) ~ NoDose, data = hemo.icens,
model = "ph", dist = "weibull")
weibull$coefficients
AIC.surv(loglik = weibull$llk, n.param = 3, n.sample = dim(hemo.icens)[1])
BIC.surv(loglik = weibull$llk, n.param = 3, n.sample = dim(hemo.icens)[1])
HC.surv(loglik = weibull$llk, n.param = 3,n.sample = dim(hemo.icens)[1])
lines(weibull, col = 'red')
weibull
weibull$baseline
turnbull_fit
turnbull_fit$bsMat
turnbull_fit$call
turnbull_fit$coefficients
turnbull_fit$iterations
turnbull_fit$llk
turnbull_fit$p_hat
1-turnbull_fit$p_hat
1-turnbull_fit$T_bull_Intervals
turnbull_fit = ic_np(cbind(L, R)~0, data = hemo.icens)
plot(turnbull_fit, lwd = 2, bty = 'n', survRange = c(0,100),
ylab = "Probabilidade de Sobrevivência",
xlab = "Tempo de Sobrevivência (Dias)")
turnbull_fit$p_hat
turnbull_fit$terms
turnbull_fit$trace
n.int = 7
x.f <- cbind(hemo.icens$NoDose)
x.c <- cbind(1, hemo.icens$NoDose)
grid.obs=time.grid.interval(li=ll.hemo, ri=rr.hemo, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(1,1,1,1,1,10,10,
1,0.5,
0.5)
max.mep.fc = optim(par = chutes, fn=loglikIC.MEP.fc,
gr = NULL, method = "BFGS",
control=list(fnscale=1),
hessian = TRUE,
l = ll.hemo, r = rr.hemo,
x.cure=x.c, x.risk=x.f,
grid.vet=grid.obs)
max.mep.fc$par
AIC.surv(loglik = max.mep.fc$value*-1, n.param = length(max.mep.fc$par),
n.sample = dim(hemo.icens)[1])
BIC.surv(loglik = max.mep.fc$value*-1, n.param = length(max.mep.fc$par),
n.sample = nrow(hemo.icens))
HC.surv(loglik = max.mep.fc$value*-1, n.param = length(max.mep.fc$par),
n.sample = nrow(hemo.icens))
max.mep.fc$par
l.turnbull = turnbull_fit$T_bull_Intervals[1,]
l.turnbull
r.turnbull = turnbull_fit$T_bull_Intervals[2,]
SpopMEP
SpopMEP(t = l.turnbull, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
SpopMEP(t = l.turnbull, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
max.mep.fc$par[10]
l.turnbull
SpopMEP(t = l.turnbull/7, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
SpopMEP(t = l.turnbull, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
l.turnbull
SpopMEP(t = ll.hemo, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
SpopMEP(t = ll.hemo, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
SpopMEP(t = rr.hemo, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spopllh = SpopMEP(t = ll.hemo, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spoprrh = SpopMEP(t = rr.hemo, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
plot(ll.hemo, spopllh, type = 's')
SpopMEP(t = sort(ll.hemo), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spopllh = SpopMEP(t = sort(ll.hemo), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spoprrh = SpopMEP(t = sort(rr.hemo), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
plot(sort(ll.hemo), spopllh, type = 's')
plot(sort(ll.hemo), sort(spopllh), type = 's')
spopllh = SpopMEP(t = sort(ll.hemo), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spopllh
ll.hemo
sort(ll.hemo)
SpopMEP(t = sort(ll.hemo,decresing=T), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spopllh =
spoprrh = SpopMEP(t = sort(rr.hemo), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spoprrh
sort(rr.hemo)
sort(rr.hemo,decreasing=T)
spopllh =
spoprrh = SpopMEP(t = sort(rr.hemo,decreasing=T), lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
spoprrh
sort(rr.hemo,decreasing=T)
sort(rr.hemo,decreasing=T)/7
SpopMEP(t = sort(rr.hemo,decreasing=T)/7, lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
max.mep.fc$par[1:7]
grid.obs
max.mep.fc$par[8:9]
max.mep.fc$par
max.mep.fc$par[10]
SpopMEP(t = sort(rr.hemo,decreasing=T)/7,
lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
SpopMEP(t = sort(rr.hemo,decreasing=T)/7,
lambda.par = max.mep.fc$par[1:7],
grid.vet = grid.obs, theta.par = max.mep.fc$par[8:9],
beta.par = max.mep.fc$par[10],
x.cure = x.c, x.risk = x.f)
