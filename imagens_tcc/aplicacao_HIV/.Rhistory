plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
lines(valores.tempo1,surv5.estrat1, col = 'red', lty=2, lwd = 2)
## grupo Dosetype == 0
valores.tempo0 = seq(0,40,length.out = nrow(hiv2[!ind.dose1,]))
surv5.estrat0 = SpopMEPP(t= valores.tempo0,
lambda.par=parametros5_int[1:5],
alpha.par=parametros5_int[6],
grid.vet=grid.observavel5,
theta.par=parametros5_int[7:8],
beta.par=parametros5_int[9],
x.cure=x.c[!ind.dose1,], x.risk=x.f[!ind.dose1])
lines( valores.tempo0,surv5.estrat0, col = 'red',  lwd = 2)
legend(x = 0.1, y = 0.25,
legend = c("Sem o fator VIII",
"Dose baixa do fator VIII",
"MEPP (5)"),
lty = c(1, 2),
lwd = 2, bty = 'n',
col = c("black", "black", "red"))
grid.observavel5=time.grid.interval(li=hiv2$Li/7, ri=hiv2$Ri/7, type="OBS",
bmax=5)
grid.observavel5=grid.observavel5[-c(1, length(grid.observavel5))]
## grupo Dosetype == 1
valores.tempo1 = seq(0,40,length.out = nrow(hiv2[ind.dose1,]))
surv5.estrat1 = SpopMEPP(t= valores.tempo1,
lambda.par=parametros5_int[1:5],
alpha.par=parametros5_int[6],
grid.vet=grid.observavel5,
theta.par=parametros5_int[7:8],
beta.par=parametros5_int[9],
x.cure=x.c[ind.dose1,], x.risk=x.f[ind.dose1])
plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
lines(valores.tempo1,surv5.estrat1, col = 'red', lty=2, lwd = 2)
## grupo Dosetype == 0
valores.tempo0 = seq(0,40,length.out = nrow(hiv2[!ind.dose1,]))
surv5.estrat0 = SpopMEPP(t= valores.tempo0,
lambda.par=parametros5_int[1:5],
alpha.par=parametros5_int[6],
grid.vet=grid.observavel5,
theta.par=parametros5_int[7:8],
beta.par=parametros5_int[9],
x.cure=x.c[!ind.dose1,], x.risk=x.f[!ind.dose1])
lines( valores.tempo0,surv5.estrat0, col = 'red',  lwd = 2)
legend(x = 0.1, y = 0.25,
legend = c("Sem o fator VIII",
"Dose baixa do fator VIII",
"MEPP (5)"),
lty = c(1, 2),
lwd = 2, bty = 'n',
col = c("black", "black", "red"))
## ----
## Modelo exponencial por partes com fracao de cura
## versao com 5 particoes
## ----
grid.observavel5=time.grid.interval(li=hiv2$Li/7, ri=hiv2$Ri/7, type="OBS",
bmax=5)
grid.observavel5=grid.observavel5[-c(1, length(grid.observavel5))]
## grupo Dosetype == 1
valores.tempo1 = seq(0,40,length.out = nrow(hiv2[ind.dose1,]))
parametros5_MEP_int
surv5.MEP.estrat1 = SpopMEP(t=valores.tempo1,
lambda.par=parametros5_MEP_int[1:5],
grid.vet=grid.observavel5,
theta.par=parametros5_MEP_int[6:7],
beta.par=parametros5_MEP_int[8],
x.cure=x.c[ind.dose1,], x.risk=x.f[ind.dose1])
plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
lines(valores.tempo1,surv5.MEP.estrat1, col = 'red', lty=2, lwd = 2)
## grupo Dosetype == 0
valores.tempo0 = seq(0,40,length.out = nrow(hiv2[!ind.dose1,]))
surv5.MEP.estrat0 = SpopMEP(t=valores.tempo0,
lambda.par=parametros5_MEP_int[1:5],
grid.vet=grid.observavel5,
theta.par=parametros5_MEP_int[6:7],
beta.par=parametros5_MEP_int[8],
x.cure=x.c[!ind.dose1,], x.risk=x.f[!ind.dose1])
lines(valores.tempo0,surv5.MEP.estrat0, col = 'red',  lwd = 2)
legend(x = 0.1, y = 0.25,
legend = c("Sem o fator VIII",
"Dose baixa do fator VIII",
"MEP (5)"),
lty = c(1, 2),
lwd = 2, bty = 'n',
col = c("black", "black", "red"))
plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
lines(valores.tempo1,surv5.MEP.estrat1, col = 'red', lty=2, lwd = 2)
hiv2.weibull$formula
surv.newdata = data.frame(DoseType = c(0, 1))
hiv2.weibull$formula
surv.newdata = data.frame(DoseType = c(0, 1))
lines(hiv2.weibull,newdata = surv.newdata,
col = c('red', 'red'), cis = F)
plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
hiv2.weibull$formula
surv.newdata = data.frame(DoseType = c(0, 1))
lines(hiv2.weibull,newdata = surv.newdata,
col = c('red', 'red'), cis = F)
plot(npmle_int_hiv, shade = F,
XLAB = "Tempo de Sobrevivência (em semanas)",
YLAB = "Probabilidade de Sobrevivência",
LEGEND = F,
XLEG = 0.2, YLEG = 0.2, axes = F,lwd = 2)
#Criando o novo eixo-x contendo valores incrementados de 1 em 1
axis(side=1, at=seq(0,8,1), labels=seq(0,8,1), cex.axis=0.7)
#Criando o novo eixo-y contendo valores incrementados de 10 em 10
axis(side=2, at=seq(0,1,0.1), labels=seq(0,1,0.1), cex.axis=0.7)
hiv2.weibull$formula
surv.newdata = data.frame(DoseType = c(0, 1))
lines(hiv2.weibull,newdata = surv.newdata,
col = c('red', 'red'), cis = F)
legend(x = 0.1, y = 0.25,
legend = c("Sem o fator VIII",
"Dose baixa do fator VIII",
"Weibull"),
lty = c(1, 2),
lwd = 2, bty = 'n',
col = c("black", "black", "red"))
spop_mepp2_l = SpopMEPP(t = hiv2$Li/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c,
x.risk = x.f,
grid.vet = grid.observavel2)
spop_mepp2_l = SpopMEPP(t = hiv2$Li/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c,
x.risk = x.f,
grid.vet = grid.observavel2)
spop_mepp2_r = SpopMEPP(t = hiv2$Ri/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c,
x.risk = x.f,
grid.vet = grid.observavel2)
rm.hiv = (spop_mepp2_l*log(spop_mepp2_l) - spop_mepp2_r*log(spop_mepp2_r))/(spop_mepp2_l-spop_mepp2_r)
length(rm.hiv)
1:length(rm.hiv)
rm.hiv
plot(1:length(rm.hiv), rm.hiv)
log(spop_mepp2_l)
spop_mepp2_l = SpopMEPP(t = hiv2$Li[!ind.dose1,]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[!ind.dose1,],
x.risk = x.f[!ind.dose1,],
grid.vet = grid.observavel2)
spop_mepp2_l = SpopMEPP(t = hiv2$Li[!ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[!ind.dose1,],
x.risk = x.f[!ind.dose1,],
grid.vet = grid.observavel2)
spop_mepp2_r = SpopMEPP(t = hiv2$Ri[!ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[!ind.dose1,],
x.risk = x.f[!ind.dose1,],
grid.vet = grid.observavel2)
rm.hiv = (spop_mepp2_l*log(spop_mepp2_l) - spop_mepp2_r*log(spop_mepp2_r))/(spop_mepp2_l-spop_mepp2_r)
length(rm.hiv)
plot(1:length(rm.hiv), rm.hiv)
spop_mepp2_l0 = SpopMEPP(t = hiv2$Li[!ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[!ind.dose1,],
x.risk = x.f[!ind.dose1,],
grid.vet = grid.observavel2)
spop_mepp2_r0 = SpopMEPP(t = hiv2$Ri[!ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[!ind.dose1,],
x.risk = x.f[!ind.dose1,],
grid.vet = grid.observavel2)
rm.hiv0 = (spop_mepp2_l0*log(spop_mepp2_l0) - spop_mepp2_r0*log(spop_mepp2_r0))/(spop_mepp2_l0-spop_mepp2_r0)
plot(1:length(rm.hiv), rm.hiv0)
spop_mepp2_l1 = SpopMEPP(t = hiv2$Li[ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[ind.dose1,],
x.risk = x.f[ind.dose1,],
grid.vet = grid.observavel2)
spop_mepp2_r1 = SpopMEPP(t = hiv2$Ri[ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[ind.dose1,],
x.risk = x.f[ind.dose1,],
grid.vet = grid.observavel2)
rm.hiv1 = (spop_mepp2_l1*log(spop_mepp2_l1) - spop_mepp2_r1*log(spop_mepp2_r1))/(spop_mepp2_l1-spop_mepp2_r1)
plot(1:length(rm.hi1), rm.hiv1)
rm.hiv1 = (spop_mepp2_l1*log(spop_mepp2_l1) - spop_mepp2_r1*log(spop_mepp2_r1))/(spop_mepp2_l1-spop_mepp2_r1)
plot(1:length(rm.hi1), rm.hiv1)
r.Deviance.breast  = sign(rm.hiv)*(-2*(rm.hiv+log(rm.hiv)))^(0.5)
plot(1:length(rm.hiv0), rm.hiv0)
plot(1:length(rm.hiv1), rm.hiv1)
points(1:length(rm.hiv1), rm.hiv1)
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
plot(1:length(rm.hiv1), rm.hiv1)
points(1:length(rm.hiv0), rm.hiv0, col = 'red')
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
plot(1:length(rm.hiv1), rm.hiv1, col = 'red')
plot(1:length(rm.hiv0), rm.hiv0)
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
rm.hiv1 = (spop_mepp2_l1*(1-log(spop_mepp2_l1)) - spop_mepp2_r1*(1-log(spop_mepp2_r1)))/(spop_mepp2_l1-spop_mepp2_r1)
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
rm.hiv0 = (spop_mepp2_l0*(1-log(spop_mepp2_l0)) - spop_mepp2_r0*(1-log(spop_mepp2_r0)))/(spop_mepp2_l0-spop_mepp2_r0)
spop_mepp2_l1 = SpopMEPP(t = hiv2$Li[ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[ind.dose1,],
x.risk = x.f[ind.dose1,],
grid.vet = grid.observavel2)
spop_mepp2_r1 = SpopMEPP(t = hiv2$Ri[ind.dose1]/7, lambda.par = parametros2_int[1:2],
alpha.par = parametros2_int[3],
theta.par = parametros2_int[4:5],
beta.par = parametros2_int[6],
x.cure = x.c[ind.dose1,],
x.risk = x.f[ind.dose1,],
grid.vet = grid.observavel2)
rm.hiv1 = (spop_mepp2_l1*(1-log(spop_mepp2_l1)) - spop_mepp2_r1*(1-log(spop_mepp2_r1)))/(spop_mepp2_l1-spop_mepp2_r1)
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
## ---
## modelo exponencial por partes potencia com fracao de cura
## ---
source('C:/Users/NetoDavi/Desktop/survival_pibic/source/supervisor_functions.R')
hiv2 = read.table('HIV_SUM_set2.txt', header = T)
left = (hiv2$Li)/7
right = (hiv2$Ri)/7
cov = hiv2$DoseType
n.int = 2
x.f <- cbind(x1=cov)
x.c <- cbind(1, x1=cov)
grid.obs=time.grid.interval(li=left, ri=right, type="OBS",
bmax=n.int)
grid.obs=grid.obs[-c(1, length(grid.obs))]
chutes = c(0.1,1,
1,
1,0.5,
0.5)
estimacao <- optim(par = chutes, fn=loglikIC, gr = NULL, method = "BFGS",
control=list(fnscale=1), hessian = TRUE, l=left,
r=right, x.cure=x.c, x.risk=x.f, grid=grid.obs)
estimacao$par
parametros2_int
log(rm.hiv)
log(rm.hiv1)
r.Deviance.breast  = sign(rm.hiv)*(-2*(rm.hiv1+log(rm.hiv1)))^(0.5)
r.Deviance.breast  = sign(rm.hiv1)*(-2*(rm.hiv1+log(rm.hiv1)))^(0.5)
r.Deviance.breast
sign(rm.hiv1)
log(rm.hiv1)
rm.hiv1
-2*(rm.hiv1+log(rm.hiv1))
sign(rm.hiv1)
(-2*(rm.hiv1+log(rm.hiv1)))^(0.5)
(-2*(rm.hiv1+log(rm.hiv1)))^(0.5)
loglikIC()
loglikIC
Dev.loglik.IC.MEPP = function(par,
l, r,
x.cure, x.risk,
grid){
hazards = par[1:b] ## taxas de falha para os b intervalos
alpha = par[b + 1] ## pparrametro de potencia
n.cov.cure = dim(x.cure)[2]
n.cov.risk = dim(x.risk)[2]
betas.cure = par[(b + 2):(b + 1 + n.cov.cure)]
betas.risk = par[(b + 2 + n.cov.cure):(b + 1 + n.cov.cure + n.cov.risk)]
n.sample <- nrow(x.cure)
delta <- ifelse(is.finite(r), 1, 0)
lik <- rep(0, n.sample)
spop.l <- SpopMEPP(t=l[delta==1], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==1,], x.risk=x.risk[delta==1,])
spop.r <- SpopMEPP(t=r[delta==1], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==1,], x.risk=x.risk[delta==1,])
lik[delta==1] <- spop.l-spop.r
spop.l2 <- SpopMEPP(t=l[delta==0], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==0,], x.risk=x.risk[delta==0,])
lik[delta==0] <- spop.l2
return(log(lik))
}
parametros2_int
spop_mepp2_l1
grid.observavel2
Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
parametros2_int
Dev.loglik.IC.MEPP = function(par,
l, r,
x.cure, x.risk,
grid){
b <- length(grid)+1
hazards = par[1:b] ## taxas de falha para os b intervalos
alpha = par[b + 1] ## pparrametro de potencia
n.cov.cure = dim(x.cure)[2]
n.cov.risk = dim(x.risk)[2]
betas.cure = par[(b + 2):(b + 1 + n.cov.cure)]
betas.risk = par[(b + 2 + n.cov.cure):(b + 1 + n.cov.cure + n.cov.risk)]
n.sample <- nrow(x.cure)
delta <- ifelse(is.finite(r), 1, 0)
lik <- rep(0, n.sample)
spop.l <- SpopMEPP(t=l[delta==1], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==1,], x.risk=x.risk[delta==1,])
spop.r <- SpopMEPP(t=r[delta==1], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==1,], x.risk=x.risk[delta==1,])
lik[delta==1] <- spop.l-spop.r
spop.l2 <- SpopMEPP(t=l[delta==0], lambda.par=hazards, alpha.par=alpha,
grid.vet=grid, beta.par=betas.risk, theta.par=betas.cure,
x.cure=x.cure[delta==0,], x.risk=x.risk[delta==0,])
lik[delta==0] <- spop.l2
return(log(lik))
}
Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
loglik5 = Dev.loglik.IC.MEPP(par = parametros5_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel5)
dev = loglik5 - loglik2
loglik2 = Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
loglik5 = Dev.loglik.IC.MEPP(par = parametros5_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel5)
dev = loglik5 - loglik2
dev
parametros2_int
x.c
x.f
Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
Dev.loglik.IC.MEPP(par = parametros5_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel5)
parametros5_int
grid.observavel2
parametros5_int
grid.observavel5
Dev.loglik.IC.MEPP(par = parametros5_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel5)
hiv2[7,]
loglik2 = Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
loglik2
summary(loglik2)
summary(loglik5)
parametros5_int
dev = loglik5 - loglik2
summary(dev)
dev
dev = is.finite(loglik5 - loglik2)
dev
dev = dev(is.finite(loglik5 - loglik2))
dev = dev[is.finite(loglik5 - loglik2)]
summary(dev)
summary(dev)
loglik2 = Dev.loglik.IC.MEPP(par = parametros2_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel2)
loglik5 = Dev.loglik.IC.MEPP(par = parametros5_int,
l = hiv2$Li,
r = hiv2$Ri,
x.cure = x.c,
x.risk = x.f,
grid = grid.observavel5)
dev = loglik5 - loglik2
dev = dev[is.finite(dev)]
summary(dev)
length(dev)
plot(1:length(dev),dev)
plot(1:length(dev),dev)
x.c
x.f
plot(1:length(dev),dev)
plot(x = x.f[is.finite(dev)], y = dev )
x.f[is.finite(dev)]
is.finite(dev)
x.f[is.finite(dev)]
x.f[is.finite(dev),]
dev = loglik5 - loglik2
ind.dev = is.finite(dev)
dev = dev[ind.dev]
summary(dev)
plot(x = x.f[ind.dev,], y = dev )
plot(1:length(dev),dev)
parametros2_int
parametros2_int[6]
plot(x = rep(parametros2_int[6],length(dev)), y = dev )
plot(1:length(dev),dev)
plot(1:length(dev),dev)
plot(x = rep(parametros2_int[6],length(dev)), y = dev )
plot(1:length(dev),dev)
plot(x = rep(parametros2_int[6],length(dev)), y = dev )
plot(x = rep(parametros2_int[5],length(dev)), y = dev )
plot(x = rep(parametros2_int[4],length(dev)), y = dev )
plot(1:length(dev),dev)
plot(x = rep(parametros2_int[6],length(dev)), y = dev )
plot(x = rep(parametros2_int[5],length(dev)), y = dev )
plot(x = rep(parametros2_int[4],length(dev)), y = dev )
sum(dev)*2
plot(1:length(dev),dev)
seq(-3,3, length.out = length(dev))
plot(x = seq(-3,3, length.out = length(dev)),length(dev)), y = dev )
plot(x = seq(-3,3, length.out = length(dev)), y = dev )
plot(x = seq(-3,3, length.out = length(dev)), y = dev )
plot(x = seq(-3,3, length.out = length(dev)), y = dev )
plot(x = rep(parametros2_int[6],length(dev)), y = dev )
plot(x = rep(parametros2_int[5],length(dev)), y = dev )
plot(x = rep(parametros2_int[4],length(dev)), y = dev )
plot(1:length(dev),dev)
plot(x = seq(-3,3, length.out = length(dev)), y = dev )
r.Deviance.breast  = sign(rm.hiv1)*(-2*(rm.hiv1+log(rm.hiv1)))^(0.5)
plot(1:length(rm.hiv0), rm.hiv0)
points(1:length(rm.hiv1), rm.hiv1, col = 'red')
